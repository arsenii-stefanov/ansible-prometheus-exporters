#!/bin/sh

######################################
###                                ###
###       MANAGED BY ANSIBLE       ###
###     (DO NOT EDIT MANUALLY)     ###
###                                ###
######################################

### BEGIN INIT INFO
# Provides:          node_exporter
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Prometheus Node Exporter
### END INIT INFO

NAME=node_exporter
DESC=node_exporter
SCRIPT={{ node_exporter_binary }}
ARGS='{{ node_exporter_agrs }}'
RUNAS=root
NETSTAT=`which netstat`
GREP=`which grep`

PIDFILE=/var/run/node_exporter.pid
LOGFILE=/var/log/node_exporter/node_exporter.log

get_pid() {
    cat "$PIDFILE"
}

is_running() {
    [ -f "$PIDFILE" ] && ps -p `get_pid` > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
        echo "Starting $NAME"
        if [ -z "$RUNAS" ]; then
            sudo $SCRIPT $ARGS >> "$LOGFILE" 2>> "$LOGFILE" &
        else
            sudo -u "$RUNAS" $SCRIPT $ARGS >> "$LOGFILE" 2>> "$LOGFILE" &
        fi
        echo $! > "$PIDFILE"
        if ! is_running; then
            echo "Unable to start, see $LOGFILE"
            exit 1
        fi
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $NAME.."
        kill `get_pid`
        for i in 1 2 3 4 5 6 7 8 9 10
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
            if [ -f "$PIDFILE" ]; then
                rm "$PIDFILE"
            fi
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
        $NETSTAT -tulpn | $GREP $NAME
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
